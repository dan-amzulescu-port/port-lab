name: Scaffold Service

on:
  workflow_dispatch:
    inputs:
      service_name:
        description: 'The name of the service'
        required: true
        default: 'my-service'
        minLength: 3
        maxLength: 50
        pattern: '^[a-zA-Z0-9]([-_a-zA-Z0-9]{1,48})[a-zA-Z0-9]$'
      programming_language:
        description: 'Programming language for the service'
        required: true
        default: 'Python'
      author_email:
        description: 'Author email'
        required: true
      license:
        description: 'License type'
        required: true
        default: 'MIT'
      version:
        description: 'Initial version of the service'
        required: true
        default: '0.1.0'
        minLength: 5
        maxLength: 20
        pattern: '^(\d+\.\d+\.\d+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?)$'
      repository_visibility:
        description: 'Repository visibility'
        required: true
        default: 'public'
      port_context:
        description: 'Port context information'
        required: false
        default: '{}'

jobs:
  scaffold:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      run: |
        # Notify PORT that the repository checkout is complete
        curl -X POST https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_context).runId }}/logs \
        -H "Content-Type: application/json" \
        -H "Authorization: ${{ secrets.PORT_JWT_TOKEN }}" \
        -d '{"message": "Checked out repository."}'

    - name: Set up Python
      if: ${{ inputs.programming_language == 'Python' }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
      run: |
        # Notify PORT that Python environment setup is complete
        curl -X POST https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_context).runId }}/logs \
        -H "Content-Type: application/json" \
        -H "Authorization: ${{ secrets.PORT_JWT_TOKEN }}" \
        -d '{"message": "Set up Python environment."}'

    - name: Set up Node.js
      if: ${{ inputs.programming_language == 'JavaScript' }}
      uses: actions/setup-node@v2
      with:
        node-version: '14'
      run: |
        # Notify PORT that Node.js environment setup is complete
        curl -X POST https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_context).runId }}/logs \
        -H "Content-Type: application/json" \
        -H "Authorization: ${{ secrets.PORT_JWT_TOKEN }}" \
        -d '{"message": "Set up Node.js environment."}'

    - name: Notify PORT - Start
      run: |
        # Notify PORT that service scaffolding has started
        curl -X POST https://api.getport.io/v1/actions/runs/${{ fromJson(inputs.port_context).runId }}/logs \
        -H "Content-Type: application/json" \
        -H "Authorization: ${{ secrets.PORT_JWT_TOKEN }}" \
        -d '{"message": "Scaffolding service started..."}'
